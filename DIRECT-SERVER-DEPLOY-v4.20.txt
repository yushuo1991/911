╔══════════════════════════════════════════════════════════════╗
║    🚨 GitHub网络阻断 - v4.20直接服务器部署方案               ║
╚══════════════════════════════════════════════════════════════╝

当前情况:
  ❌ GitHub HTTPS端口443被阻断
  ❌ SSH密钥未配置
  ✅ 本地v4.20代码已完成
  ✅ 服务器可通过宝塔面板访问

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

🎯 推荐方案：直接在服务器执行修改命令

打开宝塔面板 → 终端 → 复制整段命令执行：

cd /www/wwwroot/stock-tracker && \
echo "🔄 [1/8] 备份当前文件..." && \
cp src/app/page.tsx src/app/page.tsx.backup-$(date +%Y%m%d-%H%M%S) && \
echo "✅ 备份完成: src/app/page.tsx.backup-*" && \
echo "" && \
echo "🔧 [2/8] 应用v4.20超精细化改动..." && \
sed -i '972,982s/text-\[7px\]/text-[6px]/g' src/app/page.tsx && \
sed -i '972,982s/py-0\.5/py-[2px]/g' src/app/page.tsx && \
sed -i '997s/text-\[7px\]/text-[6px]/' src/app/page.tsx && \
sed -i '1005s/px-1 py-0\.5 rounded text-\[7px\] font-bold/px-[3px] rounded-sm text-[6px] font-bold leading-none/' src/app/page.tsx && \
sed -i '1017s/px-0\.5 rounded text-\[7px\] font-medium/px-[2px] rounded-sm text-[6px] font-medium leading-none/' src/app/page.tsx && \
sed -i '1024s/px-0\.5 rounded text-\[7px\] font-bold/px-[2px] rounded-sm text-[6px] font-bold leading-none/' src/app/page.tsx && \
echo "✅ 代码修改完成" && \
echo "" && \
echo "🔍 [3/8] 验证修改..." && \
echo "text-[6px] 出现次数:" && \
grep -c "text-\[6px\]" src/app/page.tsx && \
echo "leading-none 出现次数:" && \
grep -c "leading-none" src/app/page.tsx && \
echo "" && \
echo "🛑 [4/8] 停止旧容器..." && \
docker compose down && \
echo "" && \
echo "🧹 [5/8] 清理Docker缓存..." && \
docker image prune -f && \
echo "" && \
echo "🔨 [6/8] 重新构建镜像..." && \
docker compose build && \
echo "" && \
echo "🚀 [7/8] 启动新容器..." && \
docker compose up -d && \
echo "" && \
echo "⏳ [8/8] 等待应用启动（20秒）..." && \
sleep 20 && \
echo "" && \
echo "🔍 检查部署状态:" && \
docker ps | grep stock-tracker && \
echo "" && \
curl -I http://localhost:3002 && \
echo "" && \
echo "===========================================" && \
echo "✅ v4.20 超精细化部署完成！" && \
echo "===========================================" && \
echo "" && \
echo "🌐 访问 http://bk.yushuo.click 验证" && \
echo "⌨️  按 Ctrl+Shift+R 强制刷新浏览器"

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

📊 v4.20 改动说明

字号压缩:
  • 表头: 7px → 6px
  • 个股名: 7px → 6px
  • 状态: 7px → 6px
  • 溢价值: 7px → 6px

Padding优化:
  • 表头垂直: py-0.5 → py-[2px]
  • 状态徽章: px-1 → px-[3px]
  • 溢价徽章: px-0.5 → px-[2px]

样式精细化:
  • 圆角: rounded(4px) → rounded-sm(2px)
  • 行高: 默认 → leading-none

预期效果:
  • 徽章宽度减少 15-20%
  • 徽章高度减少 20-25%
  • 整体更精致、数据密度更高

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

🔍 验证清单

部署完成后，在浏览器验证:

1. 访问 http://bk.yushuo.click
2. 强制刷新 (Ctrl+Shift+R)
3. 点击任意日期的涨停数（如"73只涨停"）
4. 观察弹窗:
   ✅ 溢价色块明显变小
   ✅ 字号更精致（6px）
   ✅ 圆角更精致（2px）
   ✅ 整体数据密度更高
   ✅ 保持3-4列网格布局
   ✅ 无横向滚动条

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

🆘 如果遇到问题

构建超时:
  docker compose down
  docker system prune -f
  docker compose build
  docker compose up -d

检查修改是否生效:
  grep "text-\[6px\]" src/app/page.tsx | wc -l
  # 应该显示多处匹配

查看容器日志:
  docker compose logs --tail=100 app

恢复备份:
  ls src/app/page.tsx.backup-*
  cp src/app/page.tsx.backup-最新时间戳 src/app/page.tsx
  docker compose down && docker compose up -d --build

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

📝 后续操作

当GitHub网络恢复后:
  1. 在本地运行: PUSH-WHEN-NETWORK-OK.bat
  2. 或手动执行: git push origin main
  3. 这样GitHub和服务器代码保持同步

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

创建时间: 2025-10-03
版本: v4.20 超精细化优化
状态: 本地已完成，等待服务器部署
